buildscript {
    ext {
        kotlinVersion = '1.3.61'
        junitVersion = '5.5.2'
        mockkVersion = '1.9.3'
        striktVersion = '0.23.4'
        assertJVersion = '3.11.1'
    }
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath "com.github.ben-manes:gradle-versions-plugin:0.27.0"
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'com.github.ben-manes.versions'

sourceCompatibility = '1.8'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'

    testCompile "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testCompile "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter:$junitVersion"

    testImplementation "io.strikt:strikt-core:$striktVersion"
    testImplementation "io.mockk:mockk:${mockkVersion}"
    testImplementation "org.assertj:assertj-core:${assertJVersion}"
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}

test {
    useJUnitPlatform()
    dependsOn 'cleanTest'
    testLogging {
        events "passed", "skipped", "failed"
    }
}
